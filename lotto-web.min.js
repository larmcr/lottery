const MINI=require("minified"),{$:$,$$:$$,EE:EE}=MINI;(async()=>{const t=(t,s)=>t-s,s=(t,s)=>t+s,r=16,e=(t,s)=>{function r(t){return Math.exp(t)}function e(t,s){if(g<t|g<s){var e=normal_distribution_2t((POWER(t/s,1/3)+2/(9*s)-1)/o(2/(9*s)))/2;return s<t?e:1-e}var n=r(-.5*t);s%2==1&&(n*=o(2*t/b));for(var u=s;2<=u;)n=n*t/u,u-=2;for(var a=n,i=s;E*n<a;)n+=a=a*t/(i+=2);return 1-n}function n(t,s){for(var r=.5,n=.5,o=0;E<n;)n/=2,e(o=1/r-1,s)>t?r-=n:r+=n;return o}function o(t){return Math.sqrt(t)}function u(t){return 0==t?.5:.5<t?o(n(2*(1-t),1)):-o(n(2*t,1))}function a(t,s,r){var e,n=r,o=0,u=0;if("Normal"==t)return jStat.normal.inv(s,n.mean,n.std);if("T"==t)return jStat.studentt.inv(s,n.df);if("Chi-Square"==t)return jStat.chisquare.inv(s,n.df);if("F"==t)return(e=jStat.centralF.inv(s,n.df1,n.df2))||(e=inv_f_approx(s,r)),e;if("weibull"==t)return jStat.weibull.inv(s,n.scale,n.shape);if("exponential"==t)return jStat.exponential.inv(s,n.rate);if("beta"==t)return jStat.beta.inv(s,n.alpha,n.beta);if("spr"==t)return inv_f_spr(1-s,n.n);if("binomial"!=t&&"poisson"!=t)return"kolmogorov"==t?inv_distribution(s,r,{fun:ks_distribution},0,1):"lilliefors"==t?inv_distribution(s,r,{fun:lili_distribution},0,1):void debug.error("Distribution type: "+t+" doesn't exist.");for(;u<s;)u+=pdf(t,o,r),o+=1;return o-1}function i(t){var s,r=Math.round(t/2-.1),e=[],n=[],o=0,u=1;for(s=1;s<=t;s++){var i=a("Normal",(s-.375)/((u=1)*t+.25),{mean:0,std:1});n.push(i),o+=Math.pow(i,2)}var l=1/Math.pow(t,.5),m=-2.706056*Math.pow(l,5)+4.434685*Math.pow(l,4)-2.07119*Math.pow(l,3)-.147981*Math.pow(l,2)+.221157*l+n[t-u]*Math.pow(o,-.5),c=-3.582633*Math.pow(l,5)+5.682633*Math.pow(l,4)-1.752461*Math.pow(l,3)-.293762*Math.pow(l,2)+.042981*l+n[t-1-u]*Math.pow(o,-.5),p=(o-2*Math.pow(n[t-u],2)-2*Math.pow(n[t-1-u],2))/(1-2*Math.pow(m,2)-2*Math.pow(c,2)),h=Math.sqrt(p);for(e[1-u]=m,e[2-u]=c,s=3;s<r+1;s++)e[s-u]=-n[s-u]/h;return e}function l(t){return t<=50?SW_a1(t):t<=5e3?i(t):void alert("maximum 5000 values")}function m(t){return t.reduce(function(t,s){return Math.max(1*t,1*s)})}function c(t){return t.reduce(function(t,s){return Math.min(1*t,1*s)})}function p(t,s){if(void 0===s&&(s=6),"string"==typeof s&&(s=Number(s)),"infinite"==t)return"&infin;";if("ninfinite"==t)return"-&infin;";var r=Math.log10(1*Math.abs(t));10<(r=r<0?s:Math.round(r+.5)+s)&&(r=10);var e=(1*t).toPrecision(r);return"NaN"==(e=(1*e).toString())&&(e=t),e}function h(t){return t.reduce(function(t,s){return 1*t+1*s})}function f(t){var s,r,e,n,o,u,a,i,l,f,d=0,b=0,E=0,g=[],M=[];e=(s=h(t))/(r=t.length);for(var v=0;v<r;v++)residual1=t[v]-e,f=t[v]+" - "+p(e,3),g.push(residual1),M.push([t[v],f,residual1]),d+=Math.pow(residual1,2),b+=Math.pow(t[v]-e,3),E+=Math.pow(t[v]-e,4);return u=1<r?d/(r-1):0,a=d/r,n=Math.sqrt(u),o=Math.sqrt(a),i=Math.sqrt(r*(r-1))*b/(r*(r-2)*Math.pow(o,3)),l=r*(r+1)*(r-1)*E/((r-2)*(r-3)*Math.pow(d,2))-3*Math.pow(r-1,2)/((r-2)*(r-3)),{sum:s,min:c(t),max:m(t),n:r,average:e,ss:d,s:n,sigma:o,sample_variance:u,variance:a,residual_table:M,residual:g,skewness:i,kurtosis:l}}function d(t,s){var r=[...t];r=r.sort(function(t,s){return t-s});for(var e=0;e<r.length&&Number(r[e])<=0;e++)0==r[e].length&&(r.splice(e,1),e--);var n=f(r),o=n.ss,a=n.n;if(a<=5e3){var i=0,m=Math.round(a/2-.1),c=l(a);for(e=0;e<m;e++)i+=(r[a-e-1]-r[e])*c[e];var p=Math.pow(i,2)/o,h=.0038915*Math.pow(Math.log(a),3)-.083751*Math.pow(Math.log(a),2)-.31082*Math.log(a)-1.5861,d=Math.exp(.0030302*Math.pow(Math.log(a),2)-.082676*Math.log(a)-.4803),b=(Math.log(1-p)-h)/d,E=1-jStat.normal.cdf(b,0,1),g=u(1-s);return{w:p,b:i,statistic:b,pvalue:E,cval1:-1/0,cval2:g,range1:1-Math.exp(d*g+h),range2:1,n:r.length,ms:n}}}var b=Math.PI,E=1e-15,g=1e3;return d(t,s)},n=(t,s)=>{if(s>t.length||s<=0)return[];if(s===t.length)return[t];const r=[];if(1===s){for(let s=0;s<t.length;s++)r.push([t[s]]);return r}for(let e=0;e<t.length-s+1;e++){const o=t.slice(e,e+1),u=n(t.slice(e+1),s-1);for(let t=0;t<u.length;t++)r.push(o.concat(u[t]))}return r},o=t=>t<10?`0${t}`:`${t}`,u=t=>{const[s,r]=t.split("-");return`${o(Number(s))}-${o(Number(r))}`},a=t=>{const[s,r,e,n,u]=t.split("-");return`${o(Number(s))}-${o(Number(r))}-${o(Number(e))}-${o(Number(n))}-${o(Number(u))}`},i=(t,s,r,e=!1,n=!1,o=10)=>{$(t).length>0?n?e?$$(t).on(s,r):$$(t)[s](r):e?$(t).on(s,r):$(t)[s](r):o>0&&setTimeout(()=>i(t,s,r,e,n,--o),250)};try{const l=await fetch("./lotto.json"),m=await l.json();let c={lists:{nums:[],sums:[]},games:[],numbers:{},pairs:{count:{},order:[]},sums:{},tops:{}};Object.keys(m).forEach((r,e)=>{c.lists.nums=c.lists.nums.concat(m[r].n,m[r].r);const n={game:Number(r),nums:m[r].n.sort(t),sum:m[r].n.reduce(s),type:"n"},o={game:Number(r),nums:m[r].r.sort(t),sum:m[r].r.reduce(s),type:"r"};c.games.push(n,o),n.nums.forEach((t,s)=>{if(t+1===n.nums[s+1]){const s=`${t}-${t+1}`;c.pairs.count[s]=c.pairs.count[s]||0,c.pairs.count[s]++}}),o.nums.forEach((t,s)=>{if(t+1===o.nums[s+1]){const s=`${t}-${t+1}`;c.pairs.count[s]=c.pairs.count[s]||0,c.pairs.count[s]++}}),c.lists.sums.push(c.games[2*e].sum,c.games[2*e+1].sum),m[r].n.forEach(t=>{c.numbers[t]=c.numbers[t]||{count:0},c.numbers[t].count++}),m[r].r.forEach(t=>{c.numbers[t]=c.numbers[t]||{count:0},c.numbers[t].count++})});const p=Object.keys(c.games);c.lists.nums=c.lists.nums.sort(t),c.lists.sums=c.lists.sums.sort(t);const h=c.lists.sums,[f,d,b]=jStat.quartiles(h);c.sums.q1=f,c.sums.median=d,c.sums.q3=b,c.sums.sw=e(h,.05),c.sums.min=jStat.min(h),c.sums.max=jStat.max(h);const E=Object.keys(c.numbers);c.lists.combs=n(E,5).map(t=>t.map(Number));let g={};E.forEach(t=>{c.numbers[t].perc=Math.round(c.numbers[t].count/p.length*1e4)/100,c.numbers[t].lost=p.length-c.numbers[t].count,g[t]=c.numbers[t].count}),c.lists.order=Object.entries(g).sort((t,s)=>s[1]-t[1]).map(t=>Number(t[0]));const M=c.games[0].nums.length,v=Math.floor(c.lists.order.length/2);c.tops.all=c.lists.order.slice(0,M),c.tops.even=c.lists.order.filter(t=>t%2==0).slice(0,M),c.tops.odd=c.lists.order.filter(t=>t%2!=0).slice(0,M),c.tops.low=c.lists.order.filter(t=>t<v).slice(0,M),c.tops.high=c.lists.order.filter(t=>t>=v).slice(0,M);for(let t=0;t<p.length;++t){const s=-1*(t+1);c.games.at(s).outs=[-1,-1,-1,-1,-1],c.games.at(s).nums.forEach((t,r)=>{let e=!1,n=s-1;for(;!e&&n>-1*p.length;--n)for(let s=0;!e&&s<5;++s)e=c.games.at(n).nums[s]===t;e&&(c.games.at(s).outs[r]=-1*n+s-2)})}c.outs={};for(let t=0;t<=M;++t)c.outs[t]=0;for(let t=0;t<M;++t){const s=-1*(t+1);c.games.at(s).outs.forEach(t=>{t<=M&&c.outs[t]++})}for(let t=0;t<p.length;++t){const s=-1*(t+1);c.games.at(s).outs.forEach((t,r)=>{const e=c.games.at(s).nums[r];void 0===c.numbers[e].skip?c.numbers[e].skip=-1:-1===c.numbers[e].skip&&(c.numbers[e].skip=t)})}c.lists.ls=E.filter(t=>c.numbers[t].skip>r).sort((t,s)=>c.numbers[s].skip-c.numbers[t].skip).map(Number),i("#ls","add",[EE("td",EE("mark",c.lists.ls.sort(t).map(o).join("-"))),EE("td",c.lists.ls.reduce(s))]),i(".ls","fill",r);const w=(t,s,r)=>{t.includes(s)&&c.numbers[s].labels.push(r)};E.forEach(t=>{const s=Number(t);c.numbers[s].labels=[],w(c.lists.ls,s,"LS"),w(c.tops.all,s,"TA"),w(c.tops.even,s,"TE"),w(c.tops.odd,s,"TO"),w(c.tops.high,s,"TH"),w(c.tops.low,s,"TL")});const $=`(${c.sums.q1} <= sum <= ${c.sums.q3})`;i(".sum-box","fill",$),i(".pivot","fill",v),i("#sum-his","fill",`(p-value ~ ${Math.round(1e5*c.sums.sw.pvalue)/1e5})`);const j=(t,r)=>{i(`#${r}`,"add",[EE("td",EE("mark",t.sort().map(o).join("-"))),EE("td",EE("mark",t.reduce(s)))])};j(c.tops.all,"all"),j(c.tops.even,"even"),j(c.tops.odd,"odd"),j(c.tops.high,"high"),j(c.tops.low,"low"),Object.keys(c.pairs.count).sort((t,s)=>t.split("-")[0]-s.split("-")[0]).forEach(t=>{i("#pairs","add",EE("tr",[EE("td",EE("mark",u(t))),EE("td",c.pairs.count[t])]))}),c.sums.bet=c.lists.combs.filter(t=>{const r=t.reduce(s);return r>=c.sums.q1&&r<=c.sums.q3}),E.forEach(t=>{const s=EE("td",[EE("small",`(${c.numbers[t].labels.length})`)," ",c.numbers[t].labels.length>0?EE("mark",c.numbers[t].labels.join("-")):""]),r=EE("tr",[EE("td",EE("mark",o(t))),s,EE("td",c.numbers[t].count),EE("td",`${c.numbers[t].perc} %`),EE("td",c.numbers[t].skip)]);i("#nums","add",r)}),c.pairs.order=Object.entries(c.pairs.count).sort((t,s)=>s[1]-t[1]).map(t=>t[0]),c.tops.pair=c.pairs.order.slice(0,3);const k=t=>{let s=-1;for(let r=1;-1===s&&r<t.length;++r){const e=t[r-1],n=t[r];e+1===n&&(s=c.tops.pair.includes(`${e}-${n}`)?1:0)}return s},y=c.sums.bet.filter(t=>{const s=t.every(t=>c.numbers[t].labels.length>0),r=t.filter(t=>t%2),e=k(t);return s&&(2===r.length||3===r.length)&&0!==e});c.groups={group:{}},y.forEach(t=>{const s=t.join("-");c.groups.group[s]=t.map(t=>c.numbers[t].perc).reduce((t,s)=>t/100*(s/100))}),c.groups.order=Object.entries(c.groups.group).sort((t,s)=>s[1]-t[1]).map(t=>t[0]),c.tops.group=c.groups.order.slice(0,M),c.tops.group.forEach(t=>{i("#groups","add",EE("tr",[EE("td",EE("mark",a(t))),EE("td",`${Math.round(1e17*c.groups.group[t])/1e17} %`),EE("td",t.split("-").reduce((t,s)=>Number(t)+Number(s)))]))}),i("#pair","add",EE("td",EE("mark",c.tops.pair.map(u).join(" / ")))),(()=>{const t=c.lists.sums;Plotly.newPlot(document.getElementById("box-sum"),[{x:t,type:"box",name:"Sums"}]),Plotly.newPlot(document.getElementById("his-sum"),[{x:t,type:"histogram",histnorm:"probability",name:"Sums"}])})(),(()=>{const t=Object.keys(c.numbers);console.info(t);const s=t.map(t=>c.numbers[t].count);console.info(s),Plotly.newPlot(document.getElementById("plo-cou"),[{x:t,y:s,mode:"markers",type:"scatter",name:"Count"}])})()}catch(t){console.info(`ERROR: ${t}`)}})();